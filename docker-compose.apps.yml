version: '3.8'
services:
  watchdog_core:
    build:
      context: ./backend
      dockerfile: ./Watchdog.Core/Dockerfile
      args:
        - PROJECT_PORT=5050
    container_name: 'watchdog_core'
    restart: on-failure
    ports:
        - "5050:5050"
    networks:
        - back
    environment:
        ASPNETCORE_ENVIRONMENT: 'Production'
        ConnectionStrings__WatchdogCoreDBConnection: 'Server=sql_server;Database=WatchdogCoreDB;User ID=SA;Password=MySecretPassword!'

  watchdog_collector:
      build:
        context: ./backend/Watchdog.Collector
        dockerfile: Dockerfile
        args:
            - PROJECT_PORT=5090
      container_name: 'watchdog_collector'
      restart: on-failure
      ports:
          - "5090:5090"
      networks:
          - back
      environment:
          ASPNETCORE_ENVIRONMENT: 'Production'

  watchdog_notifier:
      build:
        context: ./backend/Watchdog.Notifier
        dockerfile: Dockerfile
        args:
          - PROJECT_PORT=5070
      container_name: 'watchdog_notifier'
      restart: on-failure
      ports:
          - "5070:5070"
      networks:
          - back
      environment:
          ASPNETCORE_ENVIRONMENT: 'Production'

  watchdog_client:
    depends_on:
        - watchdog_core
        - watchdog_collector
        - watchdog_notifier
    build:
        context: ./frontend
        dockerfile: Dockerfile
    container_name: 'watchdog_frontend'
    restart: on-failure
    ports:
        - "4200:80"
    networks:
        - back
        - front

networks:
    back:
        driver: bridge
    front:
        driver: bridge