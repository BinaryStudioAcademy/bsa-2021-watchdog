// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Watchdog.Core.DAL.Context;

namespace Watchdog.Core.DAL.Migrations
{
    [DbContext(typeof(WatchdogCoreContext))]
    [Migration("20210808141644_ModifyPropertiesOfUserModel")]
    partial class ModifyPropertiesOfUserModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityToken")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PlatformId");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 2, 12, 2, 4, 53, 954, DateTimeKind.Unspecified).AddTicks(9302),
                            CreatedBy = 19,
                            Name = "et",
                            OrganizationId = 4,
                            PlatformId = 1,
                            SecurityToken = "382c872c306c5e42126fd20bd128d2f8"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 11, 9, 2, 34, 53, 333, DateTimeKind.Unspecified).AddTicks(609),
                            CreatedBy = 14,
                            Name = "eaque",
                            OrganizationId = 1,
                            PlatformId = 1,
                            SecurityToken = "740bfaea383def5780176e65ae10e04f"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 5, 2, 8, 9, 18, 808, DateTimeKind.Unspecified).AddTicks(603),
                            CreatedBy = 6,
                            Name = "aliquid",
                            OrganizationId = 3,
                            PlatformId = 1,
                            SecurityToken = "4e71098eaf39041db98db018db344bc4"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 1, 21, 4, 27, 54, 821, DateTimeKind.Unspecified).AddTicks(9297),
                            CreatedBy = 7,
                            Name = "et",
                            OrganizationId = 5,
                            PlatformId = 3,
                            SecurityToken = "654e6fee6db32672fa3df4554af2e1ff"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 11, 1, 23, 50, 36, 645, DateTimeKind.Unspecified).AddTicks(6625),
                            CreatedBy = 1,
                            Name = "tempora",
                            OrganizationId = 2,
                            PlatformId = 10,
                            SecurityToken = "f41296e7015528714a10e9c0c05ec3f0"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 12, 4, 12, 59, 54, 245, DateTimeKind.Unspecified).AddTicks(9861),
                            CreatedBy = 12,
                            Name = "fugit",
                            OrganizationId = 1,
                            PlatformId = 10,
                            SecurityToken = "b5d6e399dc98eb83345815910bd25138"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 1, 20, 5, 51, 37, 155, DateTimeKind.Unspecified).AddTicks(1815),
                            CreatedBy = 12,
                            Name = "voluptatem",
                            OrganizationId = 2,
                            PlatformId = 10,
                            SecurityToken = "90637f3b5d86c09ad05bb62664b806f1"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2020, 9, 15, 5, 54, 32, 534, DateTimeKind.Unspecified).AddTicks(1538),
                            CreatedBy = 10,
                            Name = "reiciendis",
                            OrganizationId = 2,
                            PlatformId = 7,
                            SecurityToken = "59655ae4c809e4e3983efc33bafd62d7"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 4, 2, 9, 39, 11, 203, DateTimeKind.Unspecified).AddTicks(5174),
                            CreatedBy = 4,
                            Name = "voluptates",
                            OrganizationId = 3,
                            PlatformId = 4,
                            SecurityToken = "65c32abaf221ea765f963abb1d9b933c"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 4, 10, 17, 22, 41, 492, DateTimeKind.Unspecified).AddTicks(341),
                            CreatedBy = 13,
                            Name = "iusto",
                            OrganizationId = 2,
                            PlatformId = 10,
                            SecurityToken = "ad178b7cc87610aefaba124101bf5988"
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.ApplicationTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("TeamId");

                    b.ToTable("ApplicationTeams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationId = 3,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 2,
                            ApplicationId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            ApplicationId = 6,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            ApplicationId = 2,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 5,
                            ApplicationId = 4,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            ApplicationId = 5,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 7,
                            ApplicationId = 10,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 8,
                            ApplicationId = 10,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 9,
                            ApplicationId = 5,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 10,
                            ApplicationId = 5,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 11,
                            ApplicationId = 1,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 12,
                            ApplicationId = 5,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 13,
                            ApplicationId = 7,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 14,
                            ApplicationId = 3,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 15,
                            ApplicationId = 1,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 16,
                            ApplicationId = 1,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 17,
                            ApplicationId = 5,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 18,
                            ApplicationId = 9,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 19,
                            ApplicationId = 2,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 20,
                            ApplicationId = 4,
                            TeamId = 5
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Dashboards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 10, 12, 6, 42, 6, 525, DateTimeKind.Unspecified).AddTicks(2732),
                            CreatedBy = 3,
                            Name = "debitis",
                            OrganizationId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 11, 3, 11, 13, 40, 934, DateTimeKind.Unspecified).AddTicks(2638),
                            CreatedBy = 12,
                            Name = "sit",
                            OrganizationId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 2, 3, 17, 43, 11, 653, DateTimeKind.Unspecified).AddTicks(4170),
                            CreatedBy = 7,
                            Name = "error",
                            OrganizationId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 10, 22, 5, 11, 19, 396, DateTimeKind.Unspecified).AddTicks(4577),
                            CreatedBy = 11,
                            Name = "itaque",
                            OrganizationId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 7, 8, 13, 52, 55, 910, DateTimeKind.Unspecified).AddTicks(1221),
                            CreatedBy = 19,
                            Name = "voluptatibus",
                            OrganizationId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 9, 14, 18, 10, 26, 80, DateTimeKind.Unspecified).AddTicks(7223),
                            CreatedBy = 4,
                            Name = "fugiat",
                            OrganizationId = 5
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 6, 25, 15, 10, 12, 305, DateTimeKind.Unspecified).AddTicks(8976),
                            CreatedBy = 20,
                            Name = "dolore",
                            OrganizationId = 4
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 4, 9, 12, 29, 21, 740, DateTimeKind.Unspecified).AddTicks(5356),
                            CreatedBy = 11,
                            Name = "doloribus",
                            OrganizationId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 6, 2, 21, 59, 55, 122, DateTimeKind.Unspecified).AddTicks(4800),
                            CreatedBy = 3,
                            Name = "recusandae",
                            OrganizationId = 4
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 2, 21, 5, 1, 25, 731, DateTimeKind.Unspecified).AddTicks(7636),
                            CreatedBy = 9,
                            Name = "dolorem",
                            OrganizationId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2021, 7, 2, 7, 47, 50, 697, DateTimeKind.Unspecified).AddTicks(4443),
                            CreatedBy = 7,
                            Name = "eum",
                            OrganizationId = 4
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2020, 11, 9, 11, 16, 38, 651, DateTimeKind.Unspecified).AddTicks(8274),
                            CreatedBy = 9,
                            Name = "excepturi",
                            OrganizationId = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2020, 10, 18, 23, 59, 10, 615, DateTimeKind.Unspecified).AddTicks(7577),
                            CreatedBy = 3,
                            Name = "quae",
                            OrganizationId = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2019, 8, 22, 13, 56, 3, 86, DateTimeKind.Unspecified).AddTicks(1337),
                            CreatedBy = 13,
                            Name = "saepe",
                            OrganizationId = 3
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2020, 9, 23, 15, 54, 42, 918, DateTimeKind.Unspecified).AddTicks(8524),
                            CreatedBy = 13,
                            Name = "aspernatur",
                            OrganizationId = 4
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Environment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Environments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationId = 4,
                            Name = "voluptatibus"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationId = 4,
                            Name = "eveniet"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationId = 10,
                            Name = "est"
                        },
                        new
                        {
                            Id = 4,
                            ApplicationId = 9,
                            Name = "aperiam"
                        },
                        new
                        {
                            Id = 5,
                            ApplicationId = 6,
                            Name = "deleniti"
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RoleId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 23, 17, 55, 40, 784, DateTimeKind.Unspecified).AddTicks(6587),
                            CreatedBy = 19,
                            OrganizationId = 1,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 11, 11, 3, 10, 6, 170, DateTimeKind.Unspecified).AddTicks(2841),
                            CreatedBy = 16,
                            OrganizationId = 1,
                            RoleId = 5
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2019, 10, 5, 13, 0, 34, 132, DateTimeKind.Unspecified).AddTicks(3117),
                            CreatedBy = 2,
                            OrganizationId = 3,
                            RoleId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 4, 27, 7, 55, 58, 628, DateTimeKind.Unspecified).AddTicks(106),
                            CreatedBy = 6,
                            OrganizationId = 5,
                            RoleId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 8, 11, 5, 32, 51, 930, DateTimeKind.Unspecified).AddTicks(3850),
                            CreatedBy = 5,
                            OrganizationId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 8, 29, 8, 18, 24, 585, DateTimeKind.Unspecified).AddTicks(9893),
                            CreatedBy = 16,
                            OrganizationId = 5,
                            RoleId = 5
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 2, 5, 12, 28, 51, 771, DateTimeKind.Unspecified).AddTicks(7583),
                            CreatedBy = 13,
                            OrganizationId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2019, 11, 14, 5, 32, 33, 474, DateTimeKind.Unspecified).AddTicks(6814),
                            CreatedBy = 20,
                            OrganizationId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2020, 3, 1, 10, 50, 38, 346, DateTimeKind.Unspecified).AddTicks(2283),
                            CreatedBy = 18,
                            OrganizationId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 7, 14, 18, 53, 43, 769, DateTimeKind.Unspecified).AddTicks(5102),
                            CreatedBy = 14,
                            OrganizationId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2021, 6, 23, 23, 17, 16, 155, DateTimeKind.Unspecified).AddTicks(5266),
                            CreatedBy = 2,
                            OrganizationId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2021, 4, 5, 17, 35, 33, 328, DateTimeKind.Unspecified).AddTicks(4435),
                            CreatedBy = 9,
                            OrganizationId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2020, 6, 5, 23, 26, 15, 564, DateTimeKind.Unspecified).AddTicks(274),
                            CreatedBy = 12,
                            OrganizationId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2020, 2, 16, 2, 0, 40, 350, DateTimeKind.Unspecified).AddTicks(4718),
                            CreatedBy = 6,
                            OrganizationId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2021, 1, 15, 16, 3, 46, 55, DateTimeKind.Unspecified).AddTicks(7176),
                            CreatedBy = 4,
                            OrganizationId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2020, 11, 26, 21, 33, 26, 251, DateTimeKind.Unspecified).AddTicks(4354),
                            CreatedBy = 10,
                            OrganizationId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2020, 8, 9, 5, 46, 45, 899, DateTimeKind.Unspecified).AddTicks(7907),
                            CreatedBy = 12,
                            OrganizationId = 2,
                            RoleId = 4
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2020, 3, 28, 11, 51, 59, 488, DateTimeKind.Unspecified).AddTicks(8865),
                            CreatedBy = 18,
                            OrganizationId = 3,
                            RoleId = 5
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2020, 8, 26, 0, 42, 7, 317, DateTimeKind.Unspecified).AddTicks(8157),
                            CreatedBy = 5,
                            OrganizationId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2020, 12, 4, 13, 22, 46, 624, DateTimeKind.Unspecified).AddTicks(5014),
                            CreatedBy = 6,
                            OrganizationId = 4,
                            RoleId = 4
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2019, 8, 24, 23, 59, 6, 250, DateTimeKind.Unspecified).AddTicks(1004),
                            CreatedBy = 16,
                            OrganizationId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2019, 12, 13, 13, 57, 12, 13, DateTimeKind.Unspecified).AddTicks(984),
                            CreatedBy = 15,
                            OrganizationId = 3,
                            RoleId = 4
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2020, 1, 14, 18, 54, 42, 990, DateTimeKind.Unspecified).AddTicks(701),
                            CreatedBy = 9,
                            OrganizationId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2020, 2, 26, 14, 59, 29, 473, DateTimeKind.Unspecified).AddTicks(5763),
                            CreatedBy = 9,
                            OrganizationId = 3,
                            RoleId = 4
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2019, 9, 5, 4, 2, 59, 158, DateTimeKind.Unspecified).AddTicks(4664),
                            CreatedBy = 9,
                            OrganizationId = 4,
                            RoleId = 5
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2019, 10, 12, 15, 15, 12, 766, DateTimeKind.Unspecified).AddTicks(6699),
                            CreatedBy = 4,
                            OrganizationId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2019, 10, 3, 14, 41, 15, 275, DateTimeKind.Unspecified).AddTicks(7289),
                            CreatedBy = 6,
                            OrganizationId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2020, 6, 30, 21, 45, 53, 833, DateTimeKind.Unspecified).AddTicks(6612),
                            CreatedBy = 20,
                            OrganizationId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2021, 4, 26, 1, 36, 51, 405, DateTimeKind.Unspecified).AddTicks(6570),
                            CreatedBy = 1,
                            OrganizationId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2021, 3, 13, 14, 30, 36, 921, DateTimeKind.Unspecified).AddTicks(1544),
                            CreatedBy = 12,
                            OrganizationId = 3,
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarUrl = "https://picsum.photos/250/250/?image=144",
                            CreatedAt = new DateTime(2020, 3, 30, 18, 37, 49, 810, DateTimeKind.Unspecified).AddTicks(7734),
                            CreatedBy = 19,
                            Name = "Rogahn, Oberbrunner and Lebsack"
                        },
                        new
                        {
                            Id = 2,
                            AvatarUrl = "https://picsum.photos/250/250/?image=384",
                            CreatedAt = new DateTime(2021, 6, 8, 4, 26, 15, 192, DateTimeKind.Unspecified).AddTicks(4559),
                            CreatedBy = 4,
                            Name = "Parisian and Sons"
                        },
                        new
                        {
                            Id = 3,
                            AvatarUrl = "https://picsum.photos/250/250/?image=52",
                            CreatedAt = new DateTime(2021, 1, 7, 22, 2, 16, 309, DateTimeKind.Unspecified).AddTicks(4029),
                            CreatedBy = 15,
                            Name = "Okuneva - Mohr"
                        },
                        new
                        {
                            Id = 4,
                            AvatarUrl = "https://picsum.photos/250/250/?image=322",
                            CreatedAt = new DateTime(2021, 6, 22, 5, 11, 9, 722, DateTimeKind.Unspecified).AddTicks(9234),
                            CreatedBy = 12,
                            Name = "Bode, Murray and Powlowski"
                        },
                        new
                        {
                            Id = 5,
                            AvatarUrl = "https://picsum.photos/250/250/?image=180",
                            CreatedAt = new DateTime(2020, 8, 3, 16, 48, 30, 79, DateTimeKind.Unspecified).AddTicks(9857),
                            CreatedBy = 14,
                            Name = "Hammes Inc"
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarUrl = "https://picsum.photos/250/250/?image=475",
                            Name = "nihil"
                        },
                        new
                        {
                            Id = 2,
                            AvatarUrl = "https://picsum.photos/250/250/?image=892",
                            Name = "odio"
                        },
                        new
                        {
                            Id = 3,
                            AvatarUrl = "https://picsum.photos/250/250/?image=1024",
                            Name = "eos"
                        },
                        new
                        {
                            Id = 4,
                            AvatarUrl = "https://picsum.photos/250/250/?image=1066",
                            Name = "est"
                        },
                        new
                        {
                            Id = 5,
                            AvatarUrl = "https://picsum.photos/250/250/?image=943",
                            Name = "quis"
                        },
                        new
                        {
                            Id = 6,
                            AvatarUrl = "https://picsum.photos/250/250/?image=712",
                            Name = "sunt"
                        },
                        new
                        {
                            Id = 7,
                            AvatarUrl = "https://picsum.photos/250/250/?image=575",
                            Name = "deleniti"
                        },
                        new
                        {
                            Id = 8,
                            AvatarUrl = "https://picsum.photos/250/250/?image=315",
                            Name = "et"
                        },
                        new
                        {
                            Id = 9,
                            AvatarUrl = "https://picsum.photos/250/250/?image=102",
                            Name = "laborum"
                        },
                        new
                        {
                            Id = 10,
                            AvatarUrl = "https://picsum.photos/250/250/?image=238",
                            Name = "ut"
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Labore vitae inventore. Et sunt ipsum quis labore in quia repellendus. Ut provident rerum fugit quia optio. Soluta iure animi qui pariatur maiores. Qui at similique neque nihil sit suscipit.",
                            Name = "explicabo"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Quos qui ea enim adipisci consequatur eveniet omnis id veritatis. Fugiat fuga asperiores. In iure molestiae pariatur deleniti sit. Debitis natus qui sint tempore ut quas animi dolores. Eveniet sapiente dolorum.",
                            Name = "non"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Corrupti vel nihil. Fugit molestiae sint facere. Sunt omnis corporis autem.",
                            Name = "ullam"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Deserunt dolorum rerum et. Cum sit distinctio ab dolores molestiae sapiente recusandae. Quis aut veritatis ad earum rem omnis nesciunt.",
                            Name = "voluptates"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Fugiat quis aut. Velit aut tempora eligendi quod quis. Ex sed molestiae. Quae quae quia reiciendis alias iste illum error velit. Et sint delectus necessitatibus vel iusto eos asperiores. At iure incidunt sit at sit optio ut adipisci.",
                            Name = "omnis"
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Sample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Samples");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Body = "Eligendi quisquam ullam iure praesentium numquam sapiente distinctio ad. Tempore voluptatibus ad et adipisci hic amet. Corporis soluta cupiditate soluta. Provident rerum nemo dolores debitis dicta voluptatem labore dolores adipisci. Adipisci illo quidem sit dolores. Ea dolor animi quod laborum quia perspiciatis sunt tempora.",
                            CreatedAt = new DateTime(2020, 7, 1, 1, 14, 20, 556, DateTimeKind.Unspecified).AddTicks(7372),
                            CreatedBy = 5,
                            Title = "hic"
                        },
                        new
                        {
                            Id = 3,
                            Body = "Incidunt perferendis omnis. Quas voluptatem beatae vitae sunt a ut sed repellendus. Accusamus eos enim consequatur et praesentium ad ut beatae eius. Omnis voluptas error et velit autem ipsa atque consequuntur vitae. Nostrum accusamus soluta nisi.",
                            CreatedAt = new DateTime(2020, 11, 26, 1, 10, 54, 982, DateTimeKind.Unspecified).AddTicks(9175),
                            CreatedBy = 4,
                            Title = "velit"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Architecto laboriosam culpa cumque dicta in. Perspiciatis amet autem rerum recusandae perspiciatis pariatur. Eum sint molestiae quis neque tempora ab distinctio. Nobis nulla dignissimos voluptas nemo cumque tenetur quod et placeat. Nihil sit eos similique fuga enim dolores ullam suscipit.",
                            CreatedAt = new DateTime(2021, 1, 18, 12, 14, 38, 642, DateTimeKind.Unspecified).AddTicks(7703),
                            CreatedBy = 1,
                            Title = "est"
                        },
                        new
                        {
                            Id = 5,
                            Body = "Sapiente et saepe ut atque dolore accusantium soluta cumque perferendis. Magni adipisci labore corrupti. Ratione et quibusdam consequatur voluptatem velit expedita eos maxime.",
                            CreatedAt = new DateTime(2020, 2, 2, 15, 3, 56, 551, DateTimeKind.Unspecified).AddTicks(1864),
                            CreatedBy = 5,
                            Title = "placeat"
                        },
                        new
                        {
                            Id = 6,
                            Body = "Iusto aspernatur nihil iure ut blanditiis veritatis quas. Et illum quod atque nulla voluptas quos beatae quaerat consequatur. Ab placeat tenetur perferendis et omnis. Doloremque corrupti deserunt sint enim ex sit.",
                            CreatedAt = new DateTime(2021, 4, 7, 16, 50, 6, 239, DateTimeKind.Unspecified).AddTicks(5929),
                            CreatedBy = 3,
                            Title = "facere"
                        },
                        new
                        {
                            Id = 7,
                            Body = "Doloremque omnis facilis unde exercitationem consectetur culpa porro consequatur sed. Vel rem rerum eum harum. Ratione voluptate est officia accusamus doloremque perferendis ea. Unde iure laudantium ut amet repellendus enim consequatur dolor porro. Sed expedita dolorem aperiam ipsa omnis. Ut omnis ipsa quia cupiditate iure.",
                            CreatedAt = new DateTime(2019, 7, 23, 7, 33, 40, 245, DateTimeKind.Unspecified).AddTicks(9313),
                            CreatedBy = 5,
                            Title = "impedit"
                        },
                        new
                        {
                            Id = 8,
                            Body = "Nesciunt placeat et consectetur enim. Consectetur magnam perspiciatis ut rem perspiciatis odit dolorem. Modi corrupti corrupti.",
                            CreatedAt = new DateTime(2020, 1, 27, 9, 1, 30, 801, DateTimeKind.Unspecified).AddTicks(8159),
                            CreatedBy = 3,
                            Title = "corporis"
                        },
                        new
                        {
                            Id = 9,
                            Body = "Omnis culpa earum modi eos beatae autem. Deleniti labore veritatis dolorum. Omnis perferendis ut sit nulla autem ut voluptatem voluptas ut.",
                            CreatedAt = new DateTime(2021, 3, 25, 21, 11, 5, 602, DateTimeKind.Unspecified).AddTicks(6614),
                            CreatedBy = 5,
                            Title = "perspiciatis"
                        },
                        new
                        {
                            Id = 10,
                            Body = "Molestias porro exercitationem omnis et eius. Est consequatur esse sit quia dolorem sequi doloribus corporis. Perspiciatis qui dignissimos.",
                            CreatedAt = new DateTime(2021, 4, 7, 22, 46, 32, 439, DateTimeKind.Unspecified).AddTicks(5958),
                            CreatedBy = 3,
                            Title = "esse"
                        },
                        new
                        {
                            Id = 11,
                            Body = "Eos eum perferendis nisi alias et ducimus repudiandae ut. Voluptas rerum ullam omnis placeat non ea voluptatibus. Sint et et asperiores omnis recusandae saepe laborum enim. Non consequatur voluptatem in aut quia quo quo. Commodi aliquid aut quaerat adipisci. Modi ea maxime doloribus qui sint.",
                            CreatedAt = new DateTime(2021, 3, 24, 14, 25, 37, 776, DateTimeKind.Unspecified).AddTicks(56),
                            CreatedBy = 1,
                            Title = "in"
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 9, 1, 7, 47, 32, 129, DateTimeKind.Unspecified).AddTicks(9329),
                            CreatedBy = 14,
                            Name = "sunt",
                            OrganizationId = 3
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 10, 8, 22, 39, 56, 533, DateTimeKind.Unspecified).AddTicks(8774),
                            CreatedBy = 17,
                            Name = "eius",
                            OrganizationId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 9, 11, 20, 34, 6, 433, DateTimeKind.Unspecified).AddTicks(6472),
                            CreatedBy = 2,
                            Name = "suscipit",
                            OrganizationId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 1, 19, 12, 53, 16, 386, DateTimeKind.Unspecified).AddTicks(1443),
                            CreatedBy = 16,
                            Name = "cum",
                            OrganizationId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 6, 23, 16, 8, 44, 548, DateTimeKind.Unspecified).AddTicks(2045),
                            CreatedBy = 4,
                            Name = "blanditiis",
                            OrganizationId = 5
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.TeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MemberId = 9,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 2,
                            MemberId = 12,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 3,
                            MemberId = 10,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            MemberId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 5,
                            MemberId = 28,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 6,
                            MemberId = 4,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 7,
                            MemberId = 30,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 8,
                            MemberId = 5,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 9,
                            MemberId = 4,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 10,
                            MemberId = 13,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 11,
                            MemberId = 16,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 12,
                            MemberId = 8,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 13,
                            MemberId = 29,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 14,
                            MemberId = 6,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 15,
                            MemberId = 6,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 16,
                            MemberId = 30,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 17,
                            MemberId = 7,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 18,
                            MemberId = 20,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 19,
                            MemberId = 19,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 20,
                            MemberId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 21,
                            MemberId = 23,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 22,
                            MemberId = 7,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 23,
                            MemberId = 26,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 24,
                            MemberId = 7,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 25,
                            MemberId = 29,
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Tile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("DashboardId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DashboardId");

                    b.ToTable("Tiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 8, 24, 19, 56, 57, 207, DateTimeKind.Unspecified).AddTicks(5964),
                            CreatedBy = 14,
                            DashboardId = 13,
                            Name = "explicabo"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 2, 5, 6, 31, 9, 575, DateTimeKind.Unspecified).AddTicks(2253),
                            CreatedBy = 5,
                            DashboardId = 6,
                            Name = "et"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2019, 8, 24, 2, 50, 19, 608, DateTimeKind.Unspecified).AddTicks(3027),
                            CreatedBy = 20,
                            DashboardId = 8,
                            Name = "nulla"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 2, 21, 3, 45, 34, 720, DateTimeKind.Unspecified).AddTicks(8399),
                            CreatedBy = 3,
                            DashboardId = 15,
                            Name = "est"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2019, 8, 5, 23, 45, 48, 298, DateTimeKind.Unspecified).AddTicks(8056),
                            CreatedBy = 10,
                            DashboardId = 8,
                            Name = "doloribus"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 3, 22, 0, 4, 45, 919, DateTimeKind.Unspecified).AddTicks(3908),
                            CreatedBy = 12,
                            DashboardId = 14,
                            Name = "et"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2020, 11, 22, 21, 23, 48, 733, DateTimeKind.Unspecified).AddTicks(9480),
                            CreatedBy = 20,
                            DashboardId = 2,
                            Name = "qui"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 6, 2, 10, 46, 7, 850, DateTimeKind.Unspecified).AddTicks(6927),
                            CreatedBy = 8,
                            DashboardId = 14,
                            Name = "et"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 5, 7, 18, 59, 13, 655, DateTimeKind.Unspecified).AddTicks(9528),
                            CreatedBy = 18,
                            DashboardId = 5,
                            Name = "totam"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 1, 23, 5, 49, 51, 384, DateTimeKind.Unspecified).AddTicks(794),
                            CreatedBy = 20,
                            DashboardId = 1,
                            Name = "quas"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2020, 9, 1, 12, 11, 57, 170, DateTimeKind.Unspecified).AddTicks(2604),
                            CreatedBy = 4,
                            DashboardId = 11,
                            Name = "placeat"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2020, 4, 6, 2, 33, 56, 395, DateTimeKind.Unspecified).AddTicks(7716),
                            CreatedBy = 10,
                            DashboardId = 11,
                            Name = "beatae"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2019, 7, 25, 21, 17, 2, 688, DateTimeKind.Unspecified).AddTicks(6748),
                            CreatedBy = 7,
                            DashboardId = 2,
                            Name = "similique"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2021, 2, 9, 17, 55, 34, 126, DateTimeKind.Unspecified).AddTicks(4772),
                            CreatedBy = 19,
                            DashboardId = 1,
                            Name = "sint"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2021, 4, 17, 15, 59, 57, 251, DateTimeKind.Unspecified).AddTicks(3258),
                            CreatedBy = 3,
                            DashboardId = 1,
                            Name = "quaerat"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2019, 9, 11, 17, 20, 24, 304, DateTimeKind.Unspecified).AddTicks(4056),
                            CreatedBy = 7,
                            DashboardId = 14,
                            Name = "consequatur"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2020, 11, 5, 17, 32, 45, 18, DateTimeKind.Unspecified).AddTicks(7950),
                            CreatedBy = 10,
                            DashboardId = 14,
                            Name = "consequuntur"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2019, 8, 17, 3, 34, 59, 276, DateTimeKind.Unspecified).AddTicks(8512),
                            CreatedBy = 5,
                            DashboardId = 1,
                            Name = "et"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2020, 6, 23, 7, 29, 11, 206, DateTimeKind.Unspecified).AddTicks(8352),
                            CreatedBy = 5,
                            DashboardId = 4,
                            Name = "ut"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2021, 5, 1, 12, 45, 22, 202, DateTimeKind.Unspecified).AddTicks(5966),
                            CreatedBy = 12,
                            DashboardId = 3,
                            Name = "quo"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2019, 11, 8, 11, 46, 14, 149, DateTimeKind.Unspecified).AddTicks(9025),
                            CreatedBy = 16,
                            DashboardId = 5,
                            Name = "rerum"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2020, 9, 24, 0, 42, 48, 413, DateTimeKind.Unspecified).AddTicks(3080),
                            CreatedBy = 3,
                            DashboardId = 6,
                            Name = "similique"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2020, 8, 9, 10, 30, 58, 62, DateTimeKind.Unspecified).AddTicks(3863),
                            CreatedBy = 17,
                            DashboardId = 11,
                            Name = "iure"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2019, 11, 16, 22, 4, 38, 925, DateTimeKind.Unspecified).AddTicks(8090),
                            CreatedBy = 18,
                            DashboardId = 13,
                            Name = "eveniet"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2021, 3, 28, 8, 14, 13, 190, DateTimeKind.Unspecified).AddTicks(2898),
                            CreatedBy = 7,
                            DashboardId = 4,
                            Name = "ea"
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/754.jpg",
                            Email = "sandy93@gmail.com",
                            FirstName = "Sandy",
                            LastName = "Mayert",
                            RegisteredAt = new DateTime(2021, 6, 28, 10, 18, 23, 123, DateTimeKind.Unspecified).AddTicks(5316),
                            Uid = "77f95d3ce4ccce29e8b208555506"
                        },
                        new
                        {
                            Id = 2,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/198.jpg",
                            Email = "eudora_feil29@yahoo.com",
                            FirstName = "Eudora",
                            LastName = "Feil",
                            RegisteredAt = new DateTime(2019, 10, 30, 2, 0, 41, 493, DateTimeKind.Unspecified).AddTicks(5757),
                            Uid = "46a24d412486b204532df2940dce"
                        },
                        new
                        {
                            Id = 3,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/72.jpg",
                            Email = "marianna.rau@yahoo.com",
                            FirstName = "Marianna",
                            LastName = "Rau",
                            RegisteredAt = new DateTime(2019, 10, 20, 21, 37, 4, 161, DateTimeKind.Unspecified).AddTicks(2171),
                            Uid = "3565c620ce44d4bfc2a1c61705ce"
                        },
                        new
                        {
                            Id = 4,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/218.jpg",
                            Email = "america_ferry21@hotmail.com",
                            FirstName = "America",
                            LastName = "Ferry",
                            RegisteredAt = new DateTime(2019, 12, 24, 16, 33, 25, 220, DateTimeKind.Unspecified).AddTicks(4395),
                            Uid = "fcc18f98288107909ab5d3f57a46"
                        },
                        new
                        {
                            Id = 5,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/602.jpg",
                            Email = "marc_lebsack43@gmail.com",
                            FirstName = "Marc",
                            LastName = "Lebsack",
                            RegisteredAt = new DateTime(2019, 7, 23, 17, 56, 25, 628, DateTimeKind.Unspecified).AddTicks(1090),
                            Uid = "01223efe83b61b1c883bd79eb27e"
                        },
                        new
                        {
                            Id = 6,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/345.jpg",
                            Email = "arlo_thiel@hotmail.com",
                            FirstName = "Arlo",
                            LastName = "Thiel",
                            RegisteredAt = new DateTime(2020, 5, 5, 23, 31, 19, 283, DateTimeKind.Unspecified).AddTicks(8044),
                            Uid = "892f40d3ed45217700597360604f"
                        },
                        new
                        {
                            Id = 7,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/98.jpg",
                            Email = "alejandrin_brekke80@hotmail.com",
                            FirstName = "Alejandrin",
                            LastName = "Brekke",
                            RegisteredAt = new DateTime(2020, 6, 13, 23, 56, 25, 451, DateTimeKind.Unspecified).AddTicks(4553),
                            Uid = "e637da6fee1c90ada16043183cd2"
                        },
                        new
                        {
                            Id = 8,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/22.jpg",
                            Email = "connie_johnson60@gmail.com",
                            FirstName = "Connie",
                            LastName = "Johnson",
                            RegisteredAt = new DateTime(2021, 7, 17, 10, 50, 46, 816, DateTimeKind.Unspecified).AddTicks(6310),
                            Uid = "d98f138254ae601849fb4a30c3fc"
                        },
                        new
                        {
                            Id = 9,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1014.jpg",
                            Email = "antwan.swift6@yahoo.com",
                            FirstName = "Antwan",
                            LastName = "Swift",
                            RegisteredAt = new DateTime(2019, 9, 11, 5, 12, 42, 621, DateTimeKind.Unspecified).AddTicks(4741),
                            Uid = "97e0ae3f1ecf026fddc2672e4cfe"
                        },
                        new
                        {
                            Id = 10,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1108.jpg",
                            Email = "jesse.wintheiser58@hotmail.com",
                            FirstName = "Jesse",
                            LastName = "Wintheiser",
                            RegisteredAt = new DateTime(2021, 1, 3, 23, 42, 56, 548, DateTimeKind.Unspecified).AddTicks(5804),
                            Uid = "ae0563ee7fb004facd9240cef4e3"
                        },
                        new
                        {
                            Id = 11,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1131.jpg",
                            Email = "arnoldo_schiller@hotmail.com",
                            FirstName = "Arnoldo",
                            LastName = "Schiller",
                            RegisteredAt = new DateTime(2021, 5, 15, 16, 35, 43, 754, DateTimeKind.Unspecified).AddTicks(4296),
                            Uid = "c6b284640eedebf37c8a22615a67"
                        },
                        new
                        {
                            Id = 12,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/171.jpg",
                            Email = "darby_beer83@yahoo.com",
                            FirstName = "Darby",
                            LastName = "Beer",
                            RegisteredAt = new DateTime(2020, 5, 10, 0, 27, 49, 614, DateTimeKind.Unspecified).AddTicks(386),
                            Uid = "6169098d0615cfb7619c909ddee2"
                        },
                        new
                        {
                            Id = 13,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/245.jpg",
                            Email = "vesta.feest55@yahoo.com",
                            FirstName = "Vesta",
                            LastName = "Feest",
                            RegisteredAt = new DateTime(2020, 9, 12, 9, 25, 30, 496, DateTimeKind.Unspecified).AddTicks(8441),
                            Uid = "0370945b45986465554679b2a5af"
                        },
                        new
                        {
                            Id = 14,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1003.jpg",
                            Email = "rachel_powlowski23@gmail.com",
                            FirstName = "Rachel",
                            LastName = "Powlowski",
                            RegisteredAt = new DateTime(2020, 1, 6, 18, 17, 38, 650, DateTimeKind.Unspecified).AddTicks(9773),
                            Uid = "9924ae8846cea17783a78553a6c1"
                        },
                        new
                        {
                            Id = 15,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/401.jpg",
                            Email = "eliane.will@gmail.com",
                            FirstName = "Eliane",
                            LastName = "Will",
                            RegisteredAt = new DateTime(2020, 3, 25, 10, 45, 6, 36, DateTimeKind.Unspecified).AddTicks(3026),
                            Uid = "2fc812d39b5ec062efa43fa327b9"
                        },
                        new
                        {
                            Id = 16,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1066.jpg",
                            Email = "leopoldo.pfannerstill@hotmail.com",
                            FirstName = "Leopoldo",
                            LastName = "Pfannerstill",
                            RegisteredAt = new DateTime(2020, 2, 1, 19, 39, 17, 212, DateTimeKind.Unspecified).AddTicks(3797),
                            Uid = "8726581af0e4c4ffe8893586974f"
                        },
                        new
                        {
                            Id = 17,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/286.jpg",
                            Email = "dessie2@gmail.com",
                            FirstName = "Dessie",
                            LastName = "Bernhard",
                            RegisteredAt = new DateTime(2020, 8, 24, 12, 17, 18, 626, DateTimeKind.Unspecified).AddTicks(6944),
                            Uid = "bc95b14b342f4501dc012fbce420"
                        },
                        new
                        {
                            Id = 18,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/980.jpg",
                            Email = "camden_wisoky11@hotmail.com",
                            FirstName = "Camden",
                            LastName = "Wisoky",
                            RegisteredAt = new DateTime(2019, 12, 13, 10, 32, 1, 457, DateTimeKind.Unspecified).AddTicks(5363),
                            Uid = "353c8fa4177f9991c0aac0d67e37"
                        },
                        new
                        {
                            Id = 19,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/616.jpg",
                            Email = "jamaal_leannon@gmail.com",
                            FirstName = "Jamaal",
                            LastName = "Leannon",
                            RegisteredAt = new DateTime(2019, 12, 23, 7, 37, 36, 280, DateTimeKind.Unspecified).AddTicks(2979),
                            Uid = "90828a947497af816c728c4ab322"
                        },
                        new
                        {
                            Id = 20,
                            AvatarUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1012.jpg",
                            Email = "thelma_considine@gmail.com",
                            FirstName = "Thelma",
                            LastName = "Considine",
                            RegisteredAt = new DateTime(2020, 8, 18, 4, 29, 1, 814, DateTimeKind.Unspecified).AddTicks(3646),
                            Uid = "b872268f35cc36d80a94dcd6577d"
                        });
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Application", b =>
                {
                    b.HasOne("Watchdog.Core.DAL.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Watchdog.Core.DAL.Entities.Organization", "Organization")
                        .WithMany("Applications")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Watchdog.Core.DAL.Entities.Platform", "Platform")
                        .WithMany("Applications")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Platform");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.ApplicationTeam", b =>
                {
                    b.HasOne("Watchdog.Core.DAL.Entities.Application", "Application")
                        .WithMany("ApplicationTeams")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Watchdog.Core.DAL.Entities.Team", "Team")
                        .WithMany("ApplicationTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Dashboard", b =>
                {
                    b.HasOne("Watchdog.Core.DAL.Entities.User", "User")
                        .WithMany("Dashboards")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Watchdog.Core.DAL.Entities.Organization", "Organization")
                        .WithMany("Dashboards")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Environment", b =>
                {
                    b.HasOne("Watchdog.Core.DAL.Entities.Application", "Application")
                        .WithMany("Environments")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Member", b =>
                {
                    b.HasOne("Watchdog.Core.DAL.Entities.User", "User")
                        .WithMany("Members")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Watchdog.Core.DAL.Entities.Organization", "Organization")
                        .WithMany("Members")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Watchdog.Core.DAL.Entities.Role", "Role")
                        .WithMany("Members")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Organization", b =>
                {
                    b.HasOne("Watchdog.Core.DAL.Entities.User", "User")
                        .WithMany("Organizations")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Team", b =>
                {
                    b.HasOne("Watchdog.Core.DAL.Entities.User", "User")
                        .WithMany("Teams")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Watchdog.Core.DAL.Entities.Organization", "Organization")
                        .WithMany("Teams")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.TeamMember", b =>
                {
                    b.HasOne("Watchdog.Core.DAL.Entities.Member", "Member")
                        .WithMany("TeamMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Watchdog.Core.DAL.Entities.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Tile", b =>
                {
                    b.HasOne("Watchdog.Core.DAL.Entities.User", "User")
                        .WithMany("Tiles")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Watchdog.Core.DAL.Entities.Dashboard", "Dashboard")
                        .WithMany("Tiles")
                        .HasForeignKey("DashboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dashboard");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Application", b =>
                {
                    b.Navigation("ApplicationTeams");

                    b.Navigation("Environments");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Dashboard", b =>
                {
                    b.Navigation("Tiles");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Member", b =>
                {
                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Organization", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Dashboards");

                    b.Navigation("Members");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Platform", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Role", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.Team", b =>
                {
                    b.Navigation("ApplicationTeams");

                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("Watchdog.Core.DAL.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Dashboards");

                    b.Navigation("Members");

                    b.Navigation("Organizations");

                    b.Navigation("Teams");

                    b.Navigation("Tiles");
                });
#pragma warning restore 612, 618
        }
    }
}
